/**
 * @file BpmEmulatorRpc.h
 * 
 * This file is normally generated by Python (devsure/rpc).
 * It contains the C/C++ API declarations for the RPC.
 * Generated from the Python class BpmEmulatorRpc.
 * Located in devsure/devsure/rpc/test/rpc_to_bpm_emu/bpm_emulator_rpc.py.
 */

#ifndef BPMEMULATORRPC_H
#define BPMEMULATORRPC_H

//Common types used in communication (access to (c)stdint(.h) types)
#include "Emulator/RPC/TypesRPC.h"


#ifdef  __cplusplus
//C++ part of the generated code
//actual setup starts here (NOTE: generated C API are below)

#include "Emulator/RPC/InterfaceRPC.h"
#include <memory>

/// Setup actual RPC communication (called by Emulator startup code)
void SetupRPC_BpmEmulatorRpc(
    const std::shared_ptr<InterfaceChannelRPC>& ccalls_fwaits_toUse,
    const std::shared_ptr<InterfaceChannelRPC>& cwaits_fcalls_toUse,
    bool runAsynchronously = false
);

extern "C"{
#endif //__cplusplus
            
// __________________________________________________________________________
// Structures
typedef struct{
    uint64_t time_ticks;
    uint64_t pending_interrupts;
    uint64_t pin_state;
} InterruptInfo;
// __________________________________________________________________________
// Test Platform (framework) API called from C
InterruptInfo framework_wait_in_idle_state();
void framework_display_screen(char screen_bytes[460800]);

// __________________________________________________________________________
// API to be implemented in C (that is called from the framework)
// CALLED BY OTHER SIDE (Python), USER SHALL IMPLEMENT THESE HERE IN C/C++
uint32_t emulator_start_emulation();
void emulator_stop_emulation();
int32_t emulator_echo(int32_t value);

#ifdef __cplusplus

// __________________________________________________________________________
// serialization

void Serialize(const InterruptInfo& self, InterfaceChannelRPC& channel);
    

// __________________________________________________________________________
// deserialization

void Deserialize(InterruptInfo& self, InterfaceChannelRPC& channel);
    

} // extern "C"

#endif // __cplusplus
#endif // BPMEMULATORRPC_H 
